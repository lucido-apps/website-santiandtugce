{"version":3,"sources":["webpack:///./src/components/BandcampPlayer.tsx","webpack:///./src/templates/release.tsx"],"names":["IFrame","styled","iframe","withConfig","displayName","componentId","spinner","BandcampPlayer","container","React","state","width","updateDimensions","_","throttle","_this","newWidth","get","setState","leading","trailing","componentDidMount","this","current","offsetWidth","window","addEventListener","render","_this$props","props","title","url","calcHeight","height","react","UI","ref","minWidth","src","seamless","Section","Box","attrs","pb","H4","color","StreamIcons","_ref","mobile","links","Social","pl","pt","iconMaxWidth","maxWidth","mx","display","mobileDisplayToggle","InfoWrap","Flex","pr","flexDirection","PlayerWrap","Container","AlbumTitle","_ref2","artist","AlbumTitleBox","Release","_ref3","_ref3$pageContext","pageContext","description","lyrics","credits","bandcampPlayer","artistTitle","svgLinks","each","link","key","Layout","goBackTo","release_AlbumTitle","release_StreamIcons","components_BandcampPlayer"],"mappings":"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","file":"component---src-templates-release-tsx-7656a3f87637e37e4af2.js","sourcesContent":["import * as React from 'react'\nimport _ from 'lodash'\nimport styled from 'styled-components'\n\nimport { Box } from '@components/UI'\n\n// STODO\nimport spinner from '@images/ui/loading_spinner_01.gif'\n\n// STODO use same IFrame everywhere, search global for IFrame and iframe\nconst IFrame = styled.iframe`\n  background-image: url(\"${spinner}\");   \n  background-repeat: no-repeat;\n  background-position: 50% 100px;\n  border: 0;\n`\n\ntype BandcampPlayerProps = { url: string; title: string; height: number }\nclass BandcampPlayer extends React.Component<\n  BandcampPlayerProps,\n  { width: number }\n> {\n  container = React.createRef<HTMLElement>()\n\n  state = { width: 0 }\n\n  updateDimensions = _.throttle(\n    () => {\n      const { width } = this.state\n      const newWidth = _.get(this.container, 'current.offsetWidth', width)\n\n      if (newWidth !== width) {\n        this.setState({ width: newWidth })\n      }\n    },\n    200,\n    { leading: false, trailing: true }\n  )\n\n  componentDidMount() {\n    this.setState({ width: this.container.current.offsetWidth })\n    window.addEventListener('resize', this.updateDimensions)\n  }\n\n  render() {\n    const { title, url, height } = this.props\n    const { width } = this.state\n\n    const calcHeight = height - 354 + width\n\n    return (\n      <Box ref={this.container} minWidth={['300px', '354px']}>\n        <IFrame\n          title={title}\n          width=\"100%\"\n          height={`${calcHeight}px`}\n          src={url}\n          seamless\n        />\n      </Box>\n    )\n  }\n}\n\nexport default BandcampPlayer\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport _ from 'lodash'\n\nimport BandcampPlayer from '@components/BandcampPlayer'\nimport Layout from '@components/Layout'\nimport { Icons } from '@components/Social'\nimport UI, { Flex, Box, Text, H1, H2, H3 } from '@components/UI'\nimport { mobileDisplayToggle } from '@utils'\n\nconst Section = styled(Box).attrs({\n  pb: 5\n})``\n\nconst H4 = styled(UI.H4).attrs({\n  color: 'dark'\n})``\n\nconst StreamIcons = ({\n  mobile,\n  links\n}: {\n  mobile?: boolean\n  links: Record<string, string>\n}) => (\n  <Icons\n    links={links}\n    pb={[1, 1, 5]}\n    pl={[2, 2, 0]}\n    pt={[2, 2, 0]}\n    width=\"100%\"\n    iconMaxWidth=\"53px\"\n    maxWidth={['420px', '354px']}\n    mx={['auto', 0, 0]}\n    display={mobileDisplayToggle(mobile, 'flex')}\n  />\n)\n\nconst InfoWrap = styled(Flex).attrs({\n  pl: [0, 0, 4],\n  pt: [3, 3, 0],\n  pr: 2,\n  flexDirection: 'column'\n})``\n\nconst PlayerWrap = styled(Flex).attrs({\n  mx: ['auto', 'auto', '0px'],\n  maxWidth: ['420px', '360px', '360px'],\n  minWidth: '360px',\n  flexDirection: 'column'\n})``\n\nconst Container = styled(Flex).attrs({\n  flexDirection: ['column', 'column', 'row']\n})``\n\nconst AlbumTitle = ({\n  title,\n  artist,\n  mobile\n}: {\n  title: string\n  artist: string\n  mobile?: boolean\n}) => {\n  const AlbumTitleBox = styled(Box).attrs({\n    display: mobileDisplayToggle(mobile, 'initial')\n  })``\n  return (\n    <AlbumTitleBox pb={[3, 4, 4]}>\n      <H2 pb={1}>{title}</H2>\n      <H4>{`by ${artist}`}</H4>\n    </AlbumTitleBox>\n  )\n}\n\n// STODO read about Record type, make sure I'm using it correctly\ninterface ReleaseProps {\n  pageContext: {\n    title: string\n    artist: string\n    description: string\n    lyrics: string\n    credits: string\n    bandcampPlayer: {\n      url: string\n      height: number\n    }\n    links: Record<string, string>\n  }\n}\n\nconst Release = ({\n  pageContext: {\n    title,\n    artist,\n    description,\n    lyrics,\n    credits,\n    links,\n    bandcampPlayer\n  }\n}: ReleaseProps) => {\n  const artistTitle = `${artist} - ${title}`\n  const svgLinks = {}\n  _.each(links, (link, key) => (svgLinks[`svg_${key}`] = link))\n  return (\n    <Layout goBackTo=\"music\">\n      <Container>\n        <AlbumTitle mobile artist={artist} title={title} />\n        <PlayerWrap>\n          <StreamIcons mobile links={svgLinks} />\n          <BandcampPlayer\n            height={bandcampPlayer.height}\n            url={bandcampPlayer.url}\n            title={artistTitle}\n          />\n        </PlayerWrap>\n        <InfoWrap>\n          <AlbumTitle artist={artist} title={title} />\n          <StreamIcons links={svgLinks} />\n          {description ? (\n            <Section>\n              <H3 pb={1}>Description</H3>\n              <Text color=\"dark\">{description}</Text>\n            </Section>\n          ) : null}\n          {lyrics ? (\n            <Section>\n              <H3 pb={1}>Lyrics</H3>\n              <Text color=\"dark\">{lyrics}</Text>\n            </Section>\n          ) : null}\n          <Section>\n            <H3 pb={1}>Credits</H3>\n            <Text color=\"dark\">{credits}</Text>\n          </Section>\n        </InfoWrap>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default Release\n"],"sourceRoot":""}